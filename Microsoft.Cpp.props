<?xml version='1.0' ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <TargetExt></TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="&#39;$(ConfigurationType)&#39; == &#39;Application&#39;">
    <LinkCompiled>true</LinkCompiled>
    <TargetExt>.exe</TargetExt>
    <OutputType>exe</OutputType>
  </PropertyGroup>
  <PropertyGroup Condition="&#39;$(ConfigurationType)&#39; == &#39;DynamicLibrary&#39;">
    <LinkCompiled>true</LinkCompiled>
    <ImpLibCompiled Condition="&#39;$(GenerateImportLib)&#39; == &#39;true&#39;">true</ImpLibCompiled>
    <TargetExt>.dll</TargetExt>
    <OutputType>library</OutputType>
  </PropertyGroup>
  <PropertyGroup Condition="&#39;$(ConfigurationType)&#39; == &#39;StaticLibrary&#39;">
    <LibCompiled>true</LibCompiled>
    <TargetExt>.lib</TargetExt>
    <OutputType>staticlibrary</OutputType>
  </PropertyGroup>
  <PropertyGroup>
    <LocalDebuggerDebuggerType>Auto</LocalDebuggerDebuggerType>
    <LocalDebuggerCommand Condition="&#39;$(TargetPath)&#39; != &#39;&#39;">$(TargetPath)</LocalDebuggerCommand>
    <LocalDebuggerWorkingDirectory>$(ProjectDir)</LocalDebuggerWorkingDirectory>
    <LocalDebuggerMergeEnvironment>true</LocalDebuggerMergeEnvironment>
    <LocalDebuggerAttach>false</LocalDebuggerAttach>
    <LocalDebuggerSQLDebugging>false</LocalDebuggerSQLDebugging>
    <RemoteDebuggerDebuggerType>Auto</RemoteDebuggerDebuggerType>
    <RemoteDebuggerWorkingDirectory>$(ProjectDir)</RemoteDebuggerWorkingDirectory>
    <RemoteDebuggerServerName>$(COMPUTERNAME)</RemoteDebuggerServerName>
    <RemoteDebuggerConnection>RemoteWithAuthentication</RemoteDebuggerConnection>
    <RemoteDebuggerAttach>false</RemoteDebuggerAttach>
    <RemoteDebuggerSQLDebugging>false</RemoteDebuggerSQLDebugging>
    <MpiDebuggerSchedulerNode>localhost/1</MpiDebuggerSchedulerNode>
    <MpiDebuggerApplicationCommand Condition="&#39;$(TargetPath)&#39; != &#39;&#39;">$(TargetFileName)</MpiDebuggerApplicationCommand>
    <MpiDebuggerDebuggerType>Auto</MpiDebuggerDebuggerType>
    <MpiDebuggerNetworkSecurityMode>AnyAddress</MpiDebuggerNetworkSecurityMode>
    <MpiDebuggerSchedulerTimeout>5000</MpiDebuggerSchedulerTimeout>
    <MpiDebuggerDeployCommonRuntime>true</MpiDebuggerDeployCommonRuntime>
    <MpiDebuggerCleanupDeployment>true</MpiDebuggerCleanupDeployment>
    <WebBrowserDebuggerDebuggerType>Auto</WebBrowserDebuggerDebuggerType>
    <WebServiceDebuggerDebuggerType>Auto</WebServiceDebuggerDebuggerType>
    <WebServiceDebuggerSQLDebugging>false</WebServiceDebuggerSQLDebugging>
  </PropertyGroup>
  <PropertyGroup>
    <Language>C++</Language>
    <DefaultLanguageSourceExtension>.cpp</DefaultLanguageSourceExtension>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cl.Common.props" />
  <Import Project="$(VCTargetsPath)\Microsoft.Link.Common.props" />
  <Import Project="$(VCTargetsPath)\Microsoft.CodeAnalysis.props" Condition="exists(&#39;$(VCTargetsPath)\Microsoft.CodeAnalysis.props&#39;)" />
  <PropertyGroup>
    <TargetName Condition="&#39;$(TargetName)&#39; == &#39;&#39;">$(ProjectName)</TargetName>
    <ExtensionsToDeleteOnClean Condition="&#39;$(ExtensionsToDeleteOnClean)&#39; == &#39;&#39;">*.cdf;*.cache;*.obj;*.ilk;*.resources;*.tlb;*.tli;*.tlh;*.tmp;*.rsp;*.pgc;*.pgd;*.meta;*.tlog;*.manifest;*.res;*.pch;*.exp;*.idb;*.rep;*.xdc;*.pdb;*_manifest.rc;*.bsc;*.sbr;*.xml;*.metagen;*.bi</ExtensionsToDeleteOnClean>
    <IncludeVersionInInteropName Condition="&#39;$(IncludeVersionInInteropName)&#39; == &#39;&#39;">true</IncludeVersionInInteropName>
    <InteropOutputPath Condition="&#39;$(InteropOutputPath)&#39; == &#39;&#39;">Interop\</InteropOutputPath>
    <EmbedManifest Condition="&#39;$(EmbedManifest)&#39; == &#39;&#39;">true</EmbedManifest>
    <PreBuildEventUseInBuild Condition="&#39;$(PreBuildEventUseInBuild)&#39; == &#39;&#39;">true</PreBuildEventUseInBuild>
    <PreLinkEventUseInBuild Condition="&#39;$(PreLinkEventUseInBuild)&#39; == &#39;&#39;">true</PreLinkEventUseInBuild>
    <PostBuildEventUseInBuild Condition="&#39;$(PostBuildEventUseInBuild)&#39; == &#39;&#39;">true</PostBuildEventUseInBuild>
    <DocumentLibraryDependencies Condition="&#39;$(DocumentLibraryDependencies)&#39; == &#39;&#39;">true</DocumentLibraryDependencies>
    <EnableManagedIncrementalBuild Condition="&#39;$(EnableManagedIncrementalBuild)&#39; == &#39;&#39; and &#39;$(CLRSupport)&#39; != &#39;&#39; and &#39;$(CLRSupport)&#39; != &#39;false&#39;">true</EnableManagedIncrementalBuild>
    <EnableManagedIncrementalBuild Condition="&#39;$(EnableManagedIncrementalBuild)&#39; == &#39;&#39;">false</EnableManagedIncrementalBuild>
    <IgnoreImportLibrary Condition="&#39;$(IgnoreImportLibrary)&#39; == &#39;&#39; and &#39;$(CLRSupport)&#39; != &#39;&#39; and &#39;$(CLRSupport)&#39; != &#39;false&#39;">true</IgnoreImportLibrary>
    <IgnoreImportLibrary Condition="&#39;$(IgnoreImportLibrary)&#39; == &#39;&#39;">false</IgnoreImportLibrary>
    <GenerateManifest Condition="&#39;$(GenerateManifest)&#39; == &#39;&#39;">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <CustomBuild>
      <Message Condition="&#39;%(CustomBuild.Message)&#39; == &#39;&#39;">Performing Custom Build Tools</Message>
    </CustomBuild>
    <CustomBuildStep>
      <Message Condition="&#39;%(CustomBuildStep.Message)&#39; == &#39;&#39;">Performing Custom Build Step</Message>
    </CustomBuildStep>
    <Lib>
      <TrackerLogDirectory Condition="&#39;%(Lib.TrackerLogDirectory)&#39; == &#39;&#39;">$(IntDir)</TrackerLogDirectory>
      <MinimalRebuildFromTracking Condition="&#39;%(Lib.MinimalRebuildFromTracking)&#39; == &#39;&#39;">true</MinimalRebuildFromTracking>
      <OutputFile Condition="&#39;%(Lib.OutputFile)&#39; == &#39;&#39;">$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <SuppressStartupBanner Condition="&#39;%(Lib.SuppressStartupBanner)&#39; == &#39;&#39;">true</SuppressStartupBanner>
      <AcceptableNonZeroExitCodes Condition="&#39;%(Lib.AcceptableNonZeroExitCodes)&#39; == &#39;&#39;">$(AcceptableNonZeroExitCodes)</AcceptableNonZeroExitCodes>
    </Lib>
    <Midl>
      <TypeLibraryName Condition="&#39;%(Midl.TypeLibraryName)&#39; == &#39;&#39;">$(IntDir)$(ProjectName).tlb</TypeLibraryName>
      <TargetEnvironment Condition="&#39;%(Midl.TargetEnvironment)&#39; == &#39;&#39;">Win32</TargetEnvironment>
      <WarningLevel Condition="&#39;%(Midl.WarningLevel)&#39; == &#39;&#39;">1</WarningLevel>
      <DefaultCharType Condition="&#39;%(Midl.DefaultCharType)&#39; == &#39;&#39;">Signed</DefaultCharType>
      <SuppressStartupBanner Condition="&#39;%(Midl.SuppressStartupBanner)&#39; == &#39;&#39;">true</SuppressStartupBanner>
      <TrackerLogDirectory Condition="&#39;%(Midl.TrackerLogDirectory)&#39; == &#39;&#39;">$(IntDir)</TrackerLogDirectory>
      <MinimalRebuildFromTracking Condition="&#39;%(Midl.MinimalRebuildFromTracking)&#39; == &#39;&#39;">true</MinimalRebuildFromTracking>
      <AcceptableNonZeroExitCodes Condition="&#39;%(Midl.AcceptableNonZeroExitCodes)&#39; == &#39;&#39;">$(AcceptableNonZeroExitCodes)</AcceptableNonZeroExitCodes>
      <IgnoreStandardIncludePath Condition="&#39;%(Midl.IgnoreStandardIncludePath)&#39; == &#39;&#39;">false</IgnoreStandardIncludePath>
      <WarnAsError Condition="&#39;%(Midl.WarnAsError)&#39; == &#39;&#39;">false</WarnAsError>
      <GenerateTypeLibrary Condition="&#39;%(Midl.GenerateTypeLibrary)&#39; == &#39;&#39;">true</GenerateTypeLibrary>
      <ErrorCheckAllocations Condition="&#39;%(Midl.ErrorCheckAllocations)&#39; == &#39;&#39;">false</ErrorCheckAllocations>
      <ErrorCheckBounds Condition="&#39;%(Midl.ErrorCheckBounds)&#39; == &#39;&#39;">false</ErrorCheckBounds>
      <ErrorCheckEnumRange Condition="&#39;%(Midl.ErrorCheckEnumRange)&#39; == &#39;&#39;">false</ErrorCheckEnumRange>
      <ErrorCheckRefPointers Condition="&#39;%(Midl.ErrorCheckRefPointers)&#39; == &#39;&#39;">false</ErrorCheckRefPointers>
      <ErrorCheckStubData Condition="&#39;%(Midl.ErrorCheckStubData)&#39; == &#39;&#39;">false</ErrorCheckStubData>
      <StructMemberAlignment Condition="&#39;%(Midl.StructMemberAlignment)&#39; == &#39;&#39;">NotSet</StructMemberAlignment>
      <HeaderFileName Condition="&#39;%(Midl.HeaderFileName)&#39; == &#39;&#39;">%(Filename)_h.h</HeaderFileName>
    </Midl>
    <ResourceCompile>
      <ResourceOutputFileName Condition="&#39;%(ResourceCompile.ResourceOutputFileName)&#39; == &#39;&#39;">$(IntDir)%(Filename).res</ResourceOutputFileName>
      <Culture Condition="&#39;%(ResourceCompile.Culture)&#39; == &#39;&#39;">0x0409</Culture>
      <TrackerLogDirectory Condition="&#39;%(ResourceCompile.TrackerLogDirectory)&#39; == &#39;&#39;">$(IntDir)</TrackerLogDirectory>
      <MinimalRebuildFromTracking Condition="&#39;%(ResourceCompile.MinimalRebuildFromTracking)&#39; == &#39;&#39;">true</MinimalRebuildFromTracking>
      <AcceptableNonZeroExitCodes Condition="&#39;%(ResourceCompile.AcceptableNonZeroExitCodes)&#39; == &#39;&#39;">$(AcceptableNonZeroExitCodes)</AcceptableNonZeroExitCodes>
    </ResourceCompile>
    <Manifest>
      <TrackerLogDirectory Condition="&#39;%(Manifest.TrackerLogDirectory)&#39; == &#39;&#39;">$(IntDir)</TrackerLogDirectory>
      <MinimalRebuildFromTracking Condition="&#39;%(Manifest.MinimalRebuildFromTracking)&#39; == &#39;&#39;">true</MinimalRebuildFromTracking>
      <SuppressStartupBanner Condition="&#39;%(Manifest.SuppressStartupBanner)&#39; == &#39;&#39;">true</SuppressStartupBanner>
      <AcceptableNonZeroExitCodes Condition="&#39;%(Manifest.AcceptableNonZeroExitCodes)&#39; == &#39;&#39;">$(AcceptableNonZeroExitCodes)</AcceptableNonZeroExitCodes>
      <VerboseOutput Condition="&#39;%(Manifest.VerboseOutput)&#39; == &#39;&#39;">true</VerboseOutput>
      <GenerateCatalogFiles Condition="&#39;%(Manifest.GenerateCatalogFiles)&#39; == &#39;&#39;">false</GenerateCatalogFiles>
      <UpdateFileHashes Condition="&#39;%(Manifest.UpdateFileHashes)&#39; == &#39;&#39;">false</UpdateFileHashes>
      <OutputManifestFile Condition="&#39;$(EmbedManifest)&#39; == &#39;false&#39;">$(TargetPath).manifest</OutputManifestFile>
      <OutputManifestFile Condition="&#39;$(EmbedManifest)&#39; == &#39;true&#39; and &#39;$(EmbedManifestBy)&#39; == &#39;LINK&#39;">$(IntDir)$(TargetName)$(TargetExt).embed.manifest</OutputManifestFile>
    </Manifest>
    <ManifestResourceCompile>
      <ResourceOutputFileName Condition="&#39;%(ManifestResourceCompile.ResourceOutputFileName)&#39; == &#39;&#39;">$(IntDir)$(TargetName)$(TargetExt).embed.manifest.res</ResourceOutputFileName>
    </ManifestResourceCompile>
    <XdcMake>
      <TrackerLogDirectory Condition="&#39;%(XdcMake.TrackerLogDirectory)&#39; == &#39;&#39;">$(IntDir)</TrackerLogDirectory>
      <MinimalRebuildFromTracking Condition="&#39;%(XdcMake.MinimalRebuildFromTracking)&#39; == &#39;&#39;">true</MinimalRebuildFromTracking>
      <SuppressStartupBanner Condition="&#39;%(XdcMake.SuppressStartupBanner)&#39; == &#39;&#39;">true</SuppressStartupBanner>
      <OutputFile Condition="&#39;%(XdcMake.OutputFile)&#39; == &#39;&#39;">$(OutDir)$(TargetName).xml</OutputFile>
      <AcceptableNonZeroExitCodes Condition="&#39;%(XdcMake.AcceptableNonZeroExitCodes)&#39; == &#39;&#39;">$(AcceptableNonZeroExitCodes)</AcceptableNonZeroExitCodes>
      <UseUnicodeResponseFiles Condition="&#39;%(XdcMake.UseUnicodeResponseFiles)&#39; == &#39;&#39;">true</UseUnicodeResponseFiles>
      <ValidateIntelliSense Condition="&#39;%(XdcMake.ValidateIntelliSense)&#39; == &#39;&#39;">false</ValidateIntelliSense>
    </XdcMake>
    <BscMake>
      <TrackerLogDirectory Condition="&#39;%(BscMake.TrackerLogDirectory)&#39; == &#39;&#39;">$(IntDir)</TrackerLogDirectory>
      <MinimalRebuildFromTracking Condition="&#39;%(BscMake.MinimalRebuildFromTracking)&#39; == &#39;&#39;">true</MinimalRebuildFromTracking>
      <SuppressStartupBanner Condition="&#39;%(BscMake.SuppressStartupBanner)&#39; == &#39;&#39;">true</SuppressStartupBanner>
      <PreserveSBR Condition="&#39;%(BscMake.PreserveSBR)&#39; == &#39;&#39;">false</PreserveSBR>
      <OutputFile Condition="&#39;%(BscMake.OutputFile)&#39; == &#39;&#39;">$(OutDir)$(TargetName).bsc</OutputFile>
      <AcceptableNonZeroExitCodes Condition="&#39;%(BscMake.AcceptableNonZeroExitCodes)&#39; == &#39;&#39;">$(AcceptableNonZeroExitCodes)</AcceptableNonZeroExitCodes>
    </BscMake>
    <XSD>
      <TrackerLogDirectory Condition="&#39;%(XSD.TrackerLogDirectory)&#39; == &#39;&#39;">$(IntDir)</TrackerLogDirectory>
      <MinimalRebuildFromTracking Condition="&#39;%(XSD.MinimalRebuildFromTracking)&#39; == &#39;&#39;">true</MinimalRebuildFromTracking>
      <SuppressStartupBanner Condition="&#39;%(XSD.SuppressStartupBanner)&#39; == &#39;&#39;">true</SuppressStartupBanner>
      <Language Condition="&#39;%(XSD.Language)&#39; == &#39;&#39;">cpp</Language>
      <Namespace Condition="&#39;%(XSD.Namespace)&#39; == &#39;&#39;">$(TargetName)</Namespace>
      <GenerateFromSchema Condition="&#39;%(XSD.GenerateFromSchema)&#39; == &#39;&#39;">dataset</GenerateFromSchema>
      <AcceptableNonZeroExitCodes Condition="&#39;%(XSD.AcceptableNonZeroExitCodes)&#39; == &#39;&#39;">$(AcceptableNonZeroExitCodes)</AcceptableNonZeroExitCodes>
    </XSD>
    <CustomBuild>
      <TrackerLogDirectory Condition="&#39;%(CustomBuild.TrackerLogDirectory)&#39; == &#39;&#39;">$(IntDir)</TrackerLogDirectory>
      <MinimalRebuildFromTracking Condition="&#39;%(CustomBuild.MinimalRebuildFromTracking)&#39; == &#39;&#39;">true</MinimalRebuildFromTracking>
      <AcceptableNonZeroExitCodes Condition="&#39;%(CustomBuild.AcceptableNonZeroExitCodes)&#39; == &#39;&#39;">$(AcceptableNonZeroExitCodes)</AcceptableNonZeroExitCodes>
    </CustomBuild>
    <ProjectReference>
      <LinkLibraryDependencies Condition="&#39;%(ProjectReference.LinkLibraryDependencies)&#39; == &#39;&#39; and &#39;$(ConfigurationType)&#39; == &#39;StaticLibrary&#39;">false</LinkLibraryDependencies>
      <LinkLibraryDependencies Condition="&#39;%(ProjectReference.LinkLibraryDependencies)&#39; == &#39;&#39;">true</LinkLibraryDependencies>
      <UseLibraryDependencyInputs Condition="&#39;%(ProjectReference.UseLibraryDependencyInputs)&#39; == &#39;&#39;">false</UseLibraryDependencyInputs>
      <ReferenceOutputAssembly Condition="&#39;%(ProjectReference.ReferenceOutputAssembly)&#39; == &#39;&#39;">true</ReferenceOutputAssembly>
      <Private Condition="&#39;%(ProjectReference.Private)&#39; == &#39;&#39;">true</Private>
    </ProjectReference>
    <Reference>
      <ReferenceOutputAssembly>true</ReferenceOutputAssembly>
      <CopyLocalSatelliteAssemblies>true</CopyLocalSatelliteAssemblies>
    </Reference>
    <COMReference>
      <ReferenceOutputAssembly>true</ReferenceOutputAssembly>
      <CopyLocalSatelliteAssemblies>true</CopyLocalSatelliteAssemblies>
    </COMReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuildStep Include="$(ProjectName)" />
    <PreBuildEvent Include="$(ProjectName)" />
    <PreLinkEvent Include="$(ProjectName)" />
    <PostBuildEvent Include="$(ProjectName)" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Platforms\$(Platform)\Microsoft.Cpp.$(Platform).props" Condition="&#39;$(Platform)&#39; != &#39;&#39; and exists(&#39;$(VCTargetsPath)\Platforms\$(Platform)\Microsoft.Cpp.$(Platform).props&#39;)" />
</Project>
